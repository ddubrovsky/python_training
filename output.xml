<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.1 (Python 3.7.2 on win32)" generated="20190220 22:07:39.090" rpa="false">
<suite id="s1" name="Group Scenarios" source="C:\python_training\rf\group_scenarios.robot">
<kw name="Init Fixtures" library="rf.AddressBook" type="setup">
<status status="PASS" starttime="20190220 22:07:39.360" endtime="20190220 22:07:50.745"></status>
</kw>
<test id="s1-t1" name="Add new group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20190220 22:07:50.752" level="INFO">${old_list} = [77:name:hvVA# :header!{&gt;KK5:footerUGFVU} 0C*araOR  {,, 78:New group2:header|XvL+::footer, 79:New group2:header y:footeres6(5IaZLB, 80:New group:header=c*Iu9"zEK~/n 0NxO:footerCKQCgmUD-]?Xks*`, 81:::,...</msg>
<status status="PASS" starttime="20190220 22:07:50.749" endtime="20190220 22:07:50.752"></status>
</kw>
<kw name="New Group" library="rf.AddressBook">
<arguments>
<arg>name1</arg>
<arg>header1</arg>
<arg>footer1</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20190220 22:07:50.754" level="INFO">${group} = None:name1:header1:footer1</msg>
<status status="PASS" starttime="20190220 22:07:50.754" endtime="20190220 22:07:50.754"></status>
</kw>
<kw name="Create Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20190220 22:07:50.754" endtime="20190220 22:07:54.757"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20190220 22:07:54.767" level="INFO">${new_list} = [77:name:hvVA# :header!{&gt;KK5:footerUGFVU} 0C*araOR  {,, 78:New group2:header|XvL+::footer, 79:New group2:header y:footeres6(5IaZLB, 80:New group:header=c*Iu9"zEK~/n 0NxO:footerCKQCgmUD-]?Xks*`, 81:::,...</msg>
<status status="PASS" starttime="20190220 22:07:54.761" endtime="20190220 22:07:54.767"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20190220 22:07:54.767" endtime="20190220 22:07:54.767"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20190220 22:07:54.767" endtime="20190220 22:07:54.767"></status>
</kw>
<status status="PASS" starttime="20190220 22:07:50.749" endtime="20190220 22:07:54.767" critical="yes"></status>
</test>
<test id="s1-t2" name="Delete group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20190220 22:07:54.771" level="INFO">${old_list} = [77:name:hvVA# :header!{&gt;KK5:footerUGFVU} 0C*araOR  {,, 78:New group2:header|XvL+::footer, 79:New group2:header y:footeres6(5IaZLB, 80:New group:header=c*Iu9"zEK~/n 0NxO:footerCKQCgmUD-]?Xks*`, 81:::,...</msg>
<status status="PASS" starttime="20190220 22:07:54.771" endtime="20190220 22:07:54.771"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${old_list}</arg>
</arguments>
<assign>
<var>${len}</var>
</assign>
<msg timestamp="20190220 22:07:54.771" level="INFO">Length is 34</msg>
<msg timestamp="20190220 22:07:54.771" level="INFO">${len} = 34</msg>
<status status="PASS" starttime="20190220 22:07:54.771" endtime="20190220 22:07:54.771"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.randrange(${len})</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${index}</var>
</assign>
<msg timestamp="20190220 22:07:54.777" level="INFO">${index} = 14</msg>
<status status="PASS" starttime="20190220 22:07:54.777" endtime="20190220 22:07:54.777"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20190220 22:07:54.777" level="INFO">${group} = 92:new group:new header:new footer</msg>
<status status="PASS" starttime="20190220 22:07:54.777" endtime="20190220 22:07:54.782"></status>
</kw>
<kw name="Delete Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20190220 22:07:54.782" endtime="20190220 22:07:57.398"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20190220 22:07:57.398" level="INFO">${new_list} = [77:name:hvVA# :header!{&gt;KK5:footerUGFVU} 0C*araOR  {,, 78:New group2:header|XvL+::footer, 79:New group2:header y:footeres6(5IaZLB, 80:New group:header=c*Iu9"zEK~/n 0NxO:footerCKQCgmUD-]?Xks*`, 81:::,...</msg>
<status status="PASS" starttime="20190220 22:07:57.398" endtime="20190220 22:07:57.398"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20190220 22:07:57.403" endtime="20190220 22:07:57.409"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20190220 22:07:57.409" endtime="20190220 22:07:57.409"></status>
</kw>
<status status="PASS" starttime="20190220 22:07:54.771" endtime="20190220 22:07:57.409" critical="yes"></status>
</test>
<kw name="Destroy Fixtures" library="rf.AddressBook" type="teardown">
<status status="PASS" starttime="20190220 22:07:57.412" endtime="20190220 22:07:59.485"></status>
</kw>
<status status="PASS" starttime="20190220 22:07:39.090" endtime="20190220 22:07:59.485"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="Group Scenarios">Group Scenarios</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
